# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Daniel Webber (mendax1234)
# This file is distributed under the same license as the 6940 Swerve package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Transifex Bot <>, 2022
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: 6940 Swerve\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-05 20:09+0000\n"
"PO-Revision-Date: 2022-07-04 16:25+0000\n"
"Last-Translator: Transifex Bot <>, 2022\n"
"Language-Team: Chinese (China) (https://www.transifex.com/frc-team-6940-1/teams/135321/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../source/docs/software-info-team1684/integrating-other-PIDs/goal-centric.rst:2
#: f431aa1f0e7345c88af548e605ce8563
msgid "Goal Centric (Starring the Limelight)"
msgstr ""

#: ../source/docs/software-info-team1684/integrating-other-PIDs/goal-centric.rst:4
#: f83004399d4b401680336703b86a1d6d
msgid ""
"In this section, we shall discuss integrating the `Limelight "
"<https://docs.limelightvision.io/en/latest/getting_started.html>`_` with "
"swerve. We are assuming that you have some knowledge about the Limelight . "
"If you are using another form of vision processing, the concepts we will "
"discuss should still be relevant."
msgstr ""

#: ../source/docs/software-info-team1684/integrating-other-PIDs/goal-centric.rst:9
#: acdc93f5377a45808e8036664f47b10a
msgid "Vision Targeting"
msgstr ""

#: ../source/docs/software-info-team1684/integrating-other-PIDs/goal-centric.rst:12
#: 7db2b0df41a7447d979135212293f0f9
msgid "Essentials"
msgstr ""

#: ../source/docs/software-info-team1684/integrating-other-PIDs/goal-centric.rst:14
#: c75859e36f2943ed936b8035452a0e8c
msgid ""
"Almost all vision processing software should give you two very useful "
"variables: tx & ty . Below is the description of these variables from the "
"`Limelight documentation "
"<https://docs.limelightvision.io/en/latest/networktables_api.html>`_."
msgstr ""

#: ../source/docs/software-info-team1684/integrating-other-PIDs/goal-centric.rst-1
#: a3ea8204437b44bdbe30cf0d99f048c3
msgid "tx & ty1"
msgstr ""

#: ../source/docs/software-info-team1684/integrating-other-PIDs/goal-centric.rst:20
#: 0b0fc0c21b044aee9e410e178d8dc33b
msgid ""
"In the simplest targeting implementations, all you need is `tx`. More "
"complex targeting implementations will also utilize `ty`."
msgstr ""

#: ../source/docs/software-info-team1684/integrating-other-PIDs/goal-centric.rst-1
#: e43184adab9149dba6ff0e689b473a25
msgid "tx & ty2"
msgstr ""

#: ../source/docs/software-info-team1684/integrating-other-PIDs/goal-centric.rst:26
#: 231a05ec787143188d8594a4efb877bd
msgid ""
"In the left diagram, we show how the Limelight reports tx values. The black "
"dotted line shows us the y-axis, where tx = 0. We can see that tx tells us "
"how far LEFT (- tx ) or RIGHT (+ tx ) the target is from the center of the "
"Limelight."
msgstr ""

#: ../source/docs/software-info-team1684/integrating-other-PIDs/goal-centric.rst:30
#: b2ccc87f77a147b1b23a55c6a9e8b323
msgid ""
"In the right diagram, we show how the Limelight reports ty values. The black"
" dotted line shows us the x-axis, where ty = 0. We can see that ty tells us "
"how far UP (+ ty ) or DOWN (- ty ) the target is from the center of the "
"Limelight."
msgstr ""

#: ../source/docs/software-info-team1684/integrating-other-PIDs/goal-centric.rst:35
#: 12be4556bbda4fbdadcdae664880619e
msgid "Easy Mode"
msgstr ""

#: ../source/docs/software-info-team1684/integrating-other-PIDs/goal-centric.rst:37
#: 94ba7ebb9c4c41fe90b1af3f3d838c5e
msgid ""
"The simplest vision targeting PID you can do only uses `tx` . Basically, you"
" just want to turn towards the goal. This is done by applying a calculated "
"correction in the opposite direction of `tx` . Here is what your targeting "
"PID function might look like:"
msgstr ""

#: ../source/docs/software-info-team1684/integrating-other-PIDs/goal-centric.rst:49
#: 3214c3707f79406586d3d10fd9fcfd2f
msgid ""
"The kP should convert the error into a number you can use later in your "
"method to move the drivetrain ( teleop or auton )."
msgstr ""

#: ../source/docs/software-info-team1684/integrating-other-PIDs/goal-centric.rst:52
#: 9eeca1a53399422aa7cef7032adbd484
msgid ""
"Unfortunately, this implementation isn't perfect. Oftentimes, the robot "
"doesn't have enough power to correct when it is fairly close to the goal. "
"The best solution we found is in the next section."
msgstr ""

#: ../source/docs/software-info-team1684/integrating-other-PIDs/goal-centric.rst:56
#: baefc3959d7741498c66e79e5ceff6db
msgid "Advanced Mode"
msgstr ""

#: ../source/docs/software-info-team1684/integrating-other-PIDs/goal-centric.rst:58
#: 990abd2dfe614c2798f6c654d5c52090
msgid ""
"A more advanced version of the vision targeting PID implements a minimum "
"correction and an error deadzone . Just like the previous one, tx is used "
"the same way. However, the minimum correction allows the robot to creep into"
" place and the error deadzone allows the robot to stop when it's close "
"enough. Here is what your targeting PID function might look like:"
msgstr ""

#: ../source/docs/software-info-team1684/integrating-other-PIDs/goal-centric.rst:76
#: b75e08fbe95644919c106762094a85c1
msgid "Hard Mode"
msgstr ""

#: ../source/docs/software-info-team1684/integrating-other-PIDs/goal-centric.rst:78
#: 9425f85be66f443d84e893767934dc18
msgid ""
"A harder version of the vision targeting PID adds an integra l into the mix."
" Just like the previous approaches,9 tx is used the same way. However, the "
"integra l adds a little power at the end to help the robot crawl right into "
"proper positioning. The integra l replaces the minimum correction seen in "
"the previous section. Here is what your targeting PID function might look "
"like:"
msgstr ""

#: ../source/docs/software-info-team1684/integrating-other-PIDs/goal-centric.rst:99
#: 71e4c5ac347646dc8cdeca98705d7482
msgid ""
"tuning the integral can be extremely difficult. From our own experience "
"taking the advanced approach is much easier and has very similar results to "
"this implementation."
msgstr ""

#: ../source/docs/software-info-team1684/integrating-other-PIDs/goal-centric.rst:102
#: 9755453b9276435e97483c93b475eb2e
msgid "Expert Mode"
msgstr ""

#: ../source/docs/software-info-team1684/integrating-other-PIDs/goal-centric.rst:104
#: c97642892e2b4baaa3576d55075e61f2
msgid ""
"A more complex version of the vision targeting PID utilizes both tx & ty . "
"Just like the previous ones, tx is used the same way. However, now ty is "
"used to calculate the distance from the goal. Depending on the year and "
"setup of your robot, your use of ty can vary. We will briefly discuss a few "
"of the most common ones."
msgstr ""

#: ../source/docs/software-info-team1684/integrating-other-PIDs/goal-centric.rst:109
#: 8d10b56837024d73ae45cc3352ac2bd2
msgid ""
"Because ty gives us the vertical offset (in degrees) we are away from the "
"target, we can use that to achieve a specific position. (For the purposes of"
" simplicity, we are using the pseudocode from this example.) Here is what "
"your targeting PID function might look like:"
msgstr ""

#: ../source/docs/software-info-team1684/integrating-other-PIDs/goal-centric.rst:134
#: 6d060c36afc348ceac6426b9aa108dd6
msgid ""
"Together, these two PIDs enable your robot to turn towards and line up to "
"the target, while driving to a desired distance away from the target. You "
"can change the distance from target position by adding an offset to ty ( ty "
"- 3)."
msgstr ""

#: ../source/docs/software-info-team1684/integrating-other-PIDs/goal-centric.rst:138
#: da01887f9c254f75b7293775760fa1d8
msgid ""
"Another use for ty is to use the “distance” to enhance your scoring "
"mechanism. For example, you can change the speed of a shooter wheel based "
"off of your distance, or the angle of a shooter hood. You can adjust the "
"height of an elevator based on the vertical offset, or even disable scoring "
"until your robot is close enough to place the game piece. The use of ty is "
"only limited by your imagination. Because there are so many possibilities, "
"we will not show any pseudocode."
msgstr ""

#: ../source/docs/software-info-team1684/integrating-other-PIDs/goal-centric.rst:145
#: d5923ce371604c52bea90c13a1a9b111
msgid "Goal-Centric"
msgstr ""

#: ../source/docs/software-info-team1684/integrating-other-PIDs/goal-centric.rst:148
#: 383603689cbc4d64ad92c6c418f0f852
msgid "Introduction"
msgstr ""

#: ../source/docs/software-info-team1684/integrating-other-PIDs/goal-centric.rst:150
#: a97b3c7ff30342a28183e94d1bf164bb
msgid ""
"In goal centric, instead of the driver joysticks referencing the field (as "
"in field-centric control), they reference a specific goal or target. In the "
"2020 season, we specifically targeted the Upper Power Port. In the 2019 "
"season, we targeted the Loading Station, Cargo Ship, and Rocket for Hatch "
"placement. Essentially, you want to target any major field element to make "
"it easier and faster to score. If implemented properly, the robot will "
"naturally face the goal and strafe in an arc around it."
msgstr ""

#: ../source/docs/software-info-team1684/integrating-other-PIDs/goal-centric.rst:157
#: f3311d7190744319a5addf2d07074610
msgid "How It's Done"
msgstr ""

#: ../source/docs/software-info-team1684/integrating-other-PIDs/goal-centric.rst:159
#: b1ee0b0b0d6d4441a4fb8656b3c968b9
msgid ""
"If you are using just tx to line up with the goal, here is what your code "
"may look like: move(fwd, rot + limelightXPID(tx), str);"
msgstr ""

#: ../source/docs/software-info-team1684/integrating-other-PIDs/goal-centric.rst:162
#: 1ddcbe81235749e49c7d21d47ee8566c
msgid ""
"Notice that the tx PID is added to rotate . We just want our robot to look "
"at the target. So, all we have to do is turn toward the goal. We are only "
"aiming using the Limelight , not moving."
msgstr ""

#: ../source/docs/software-info-team1684/integrating-other-PIDs/goal-centric.rst:165
#: d2246fe1605c403dadf886dced9b12e6
msgid ""
"If you are using both tx and ty to line up with the goal, here is what your "
"code may look like: move(fwd + limelightY PID(ty), rot + limelightXPID(tx), "
"str);"
msgstr ""

#: ../source/docs/software-info-team1684/integrating-other-PIDs/goal-centric.rst:168
#: 58026464101d4dbcaeb43a54777b6f7c
msgid ""
"In addition to tx , notice that the ty PID is added to forward . We want our"
" robot to drive to a specific location relative to the target. So, we have "
"to drive toward/away from the goal. We are moving to a set position, while "
"looking at the target."
msgstr ""

#: ../source/docs/software-info-team1684/integrating-other-PIDs/goal-centric.rst:172
#: 910628b518af48ebb733023d8f4a72d8
msgid ""
"These functions must be called every cycle. The robot can't properly correct"
" invalid positioning based on old data."
msgstr ""
